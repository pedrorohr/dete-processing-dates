name: DETE Processing Dates

on: push

env:
  GO_SCRAPER_PROJECT_DIR: src/scraper
  GO_SCRAPER_PROJECT_EXEC_DIR: ../../bin/scraper
  GO_NOTIFIER_PROJECT_DIR: src/notifier
  GO_NOTIFIER_PROJECT_EXEC_DIR: ../../bin/notifier
  INFRASTRUCTURE_DIR: infrastructure

jobs:
  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Run Golang Scraper project unit tests
        run: |
          cd ${{ env.GO_SCRAPER_PROJECT_DIR }}
          go test -v ./...
      - name: Run Golang Notifier project unit tests
        run: |
          cd ${{ env.GO_NOTIFIER_PROJECT_DIR }}
          go test -v ./...

  build-and-plan:
    name: Build executable file and plan infrastructure changes
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build Golang scraper project executable file
        run: |
          cd ${{ env.GO_SCRAPER_PROJECT_DIR }}
          env GOOS=linux GOARCH=amd64 go build -o ${{ env.GO_SCRAPER_PROJECT_EXEC_DIR }}
      - name: Build Golang notifier project executable file
        run: |
          cd ${{ env.GO_NOTIFIER_PROJECT_DIR }}
          env GOOS=linux GOARCH=amd64 go build -o ${{ env.GO_NOTIFIER_PROJECT_EXEC_DIR }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Init infrastructure
        run: |
          cd ${{ env.INFRASTRUCTURE_DIR }}
          terraform init
      - name: Plan infrastructure changes
        env:
          TF_VAR_dete_processing_dates_url: ${{ secrets.DETE_PROCESSING_DATES_URL }}
          TF_VAR_dete_bot_api_token: ${{ secrets.DETE_BOT_API_TOKEN }}
          TF_VAR_dete_chat_id: ${{ secrets.DETE_CHAT_ID }}
        run: |
          cd ${{ env.INFRASTRUCTURE_DIR }}
          terraform plan -no-color

  build-and-apply:
    name: Build executable file and apply infrastructure changes
    runs-on: ubuntu-latest
    needs: build-and-plan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build Golang scraper project executable file
        run: |
          cd ${{ env.GO_SCRAPER_PROJECT_DIR }}
          env GOOS=linux GOARCH=amd64 go build -o ${{ env.GO_SCRAPER_PROJECT_EXEC_DIR }}
      - name: Build Golang notifier project executable file
        run: |
          cd ${{ env.GO_NOTIFIER_PROJECT_DIR }}
          env GOOS=linux GOARCH=amd64 go build -o ${{ env.GO_NOTIFIER_PROJECT_EXEC_DIR }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Init infrastructure
        run: |
          cd ${{ env.INFRASTRUCTURE_DIR }}
          terraform init
      - name: Apply infrastructure changes
        env:
          TF_VAR_dete_processing_dates_url: ${{ secrets.DETE_PROCESSING_DATES_URL }}
          TF_VAR_dete_bot_api_token: ${{ secrets.DETE_BOT_API_TOKEN }}
          TF_VAR_dete_chat_id: ${{ secrets.DETE_CHAT_ID }}
        run: |
          cd ${{ env.INFRASTRUCTURE_DIR }}
          terraform apply -auto-approve
